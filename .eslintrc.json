{
  "root": true,
  "ignorePatterns": [
    "projects/**/*"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json",
          "e2e/tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "@mymicds",
        "prettier",
        "plugin:@angular-eslint/recommended--extra"
      ],
      "rules": {
        "@typescript-eslint/no-non-null-assertion": [
          "off"
        ],
        "@typescript-eslint/no-unsafe-argument": [
          "warn"
        ],
        "@angular-eslint/component-selector": [
          "warn",
          {
            "prefix": "mymicds"
          }
        ],
        "@typescript-eslint/member-ordering": [
          "warn",
          {
            "default": [
              "private-field",
              "protected-field",
              "public-field",
              "private-method",
              "protected-method",
              "public-method"
            ]
          }
        ],
        "@typescript-eslint/naming-convention": "off",
        "@typescript-eslint/unbound-method": [
          "error",
          {
            "ignoreStatic": true
          }
        ],
        "prefer-arrow/prefer-arrow-functions": "off",
        "no-restricted-syntax": [
          "error",
          {
            "selector": "MemberExpression[object.name='document'][property.name='getElementById']",
            "message": "Do not use document.getElementById directly, use Angular @ViewChild/ViewChildren decorators instead."
          },
          {
            "selector": "ForInStatement",
            "message": "Do not use for..in statements, iterate over Object.keys() instead."
          }
        ],
        "no-underscore-dangle": "off"
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {}
    }
  ]
}
